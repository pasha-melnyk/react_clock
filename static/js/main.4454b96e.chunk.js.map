{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","undefined","this","setState","setInterval","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,aAASC,GAHb,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZH,QAASI,aAAY,WACnB,EAAKD,SAAS,CAAEL,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,SAbT,gCAiBE,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAElCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SApB9E,kCAwBE,WACEE,cAAcT,KAAKL,MAAMG,WAzB7B,oBA4BE,WACE,OACE,+BAAOE,KAAKL,MAAMC,KAAKS,2BA9B7B,GAA2BK,IAAMC,WCF3BC,G,kNACJjB,MAAQ,CACNkB,gBAAgB,EAChBN,KAAMO,KAAKC,MAAsB,IAAhBD,KAAKE,W,4CAGxB,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,8CAEG,IACAjB,KAAKL,MAAMkB,gBAAmB,cAAC,EAAD,CAAON,KAAMP,KAAKL,MAAMY,UAGzD,wBACEW,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEY,gBAAgB,KAHpC,wBASA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEY,gBAAgB,KAHpC,wBASA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEM,KAAMO,KAAKC,MAAsB,IAAhBD,KAAKE,aAH1C,oC,GAlCUN,IAAMC,YA+CTC,ICrDfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4454b96e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  timerId: NodeJS.Timer | undefined;\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n    timerId: undefined,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: setInterval(() => {\n        this.setState({ date: new Date() });\n\n        // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString());\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps: { name: number; }) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <span>{this.state.date.toLocaleTimeString()}</span>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean;\n  name: number\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    name: Math.floor(Math.random() * 100),\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (<Clock name={this.state.name} />)}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ name: Math.floor(Math.random() * 100) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}